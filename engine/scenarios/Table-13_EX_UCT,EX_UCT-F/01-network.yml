---
# 1. Network properties
#
# network: map tsn configurations to nodes and define network paths (flows)
# tsn-configs: full tsn configuration

# ------------------------------ FLOWS + TSN-map -------------------------------
network:
  net-2:
    tsn:
      tsn-20: ["node-1:1,3","node-2:4","node-3:4", "node-4:3","node-5:3,4","node-6:1"]
    flows:
      1: ':node-5:4,2:node-3:4,3:node-7:'
      2: ':node-1:3,3:node-6:1,2:node-5:3,1:node-4:3,4:node-7:'
      3: ':node-1:1,3:node-2:4,1:node-3:4,3:node-7:'
      4: ':node-6:4,1:node-2:4,1:node-3:4,3:node-7:'
      5: ':node-5:4,2:node-3:3,2:node-4:3,4:node-7:'
      # PTP Flows
      6: ':node-1:2,5:node-7:6,2:node-6:'
      7: ':node-7:7,2:node-2:'
      8: ':node-4:4,1:node-8:3,2:node-9:1,1:node-7:'
      9: ':node-5:1,1:node-10:2,4:node-8:3,2:node-9:1,1:node-7:'
    check: true
    num_net_cores: 2 # Specify the number of cores assigned to NIC IRQs. Cores beginning with core 0 will be allocated to the IRQs. E.g. if specified to 2 means that IRQs will be allocated to cores 0 and 1
    nic_irq_rt: true # Specify if the NIC IRQs will be set to real-time priority in the linux kernel. Requires the low latency kernel!!

  net-3:
    tsn:
      tsn-21: ["node-1:1,3","node-2:4","node-3:4", "node-4:3","node-5:3,4","node-6:1"]
      tsn-10: ["node-3:3","node-6:4"]
    flows:
      1: ':node-5:4,2:node-3:4,3:node-7:'
      2: ':node-1:3,3:node-6:1,2:node-5:3,1:node-4:3,4:node-7:'
      3: ':node-1:1,3:node-2:4,1:node-3:4,3:node-7:'
      4: ':node-6:4,1:node-2:4,1:node-3:4,3:node-7:'
      5: ':node-5:4,2:node-3:3,2:node-4:3,4:node-7:'
      # PTP Flows
      6: ':node-1:2,5:node-7:6,2:node-6:'
      7: ':node-7:7,2:node-2:'
      8: ':node-4:4,1:node-8:3,2:node-9:1,1:node-7:'
      9: ':node-5:1,1:node-10:2,4:node-8:3,2:node-9:1,1:node-7:'
    check: true
    num_net_cores: 2 # Specify the number of cores assigned to NIC IRQs. Cores beginning with core 0 will be allocated to the IRQs. E.g. if specified to 2 means that IRQs will be allocated to cores 0 and 1
    nic_irq_rt: true # Specify if the NIC IRQs will be set to real-time priority in the linux kernel. Requires the low latency kernel!!
  net-4:
    tsn:
      tsn-22: ["node-1:1,3","node-2:4","node-3:4", "node-4:3","node-5:3,4","node-6:1"]
      tsn-10: ["node-3:3","node-6:4"]
    flows:
      1: ':node-5:4,2:node-3:4,3:node-7:'
      2: ':node-1:3,3:node-6:1,2:node-5:3,1:node-4:3,4:node-7:'
      3: ':node-1:1,3:node-2:4,1:node-3:4,3:node-7:'
      4: ':node-6:4,1:node-2:4,1:node-3:4,3:node-7:'
      5: ':node-5:4,2:node-3:3,2:node-4:3,4:node-7:'
      # PTP Flows
      6: ':node-1:2,5:node-7:6,2:node-6:'
      7: ':node-7:7,2:node-2:'
      8: ':node-4:4,1:node-8:3,2:node-9:1,1:node-7:'
      9: ':node-5:1,1:node-10:2,4:node-8:3,2:node-9:1,1:node-7:'    
    check: true
    num_net_cores: 2 # Specify the number of cores assigned to NIC IRQs. Cores beginning with core 0 will be allocated to the IRQs. E.g. if specified to 2 means that IRQs will be allocated to cores 0 and 1
    nic_irq_rt: true # Specify if the NIC IRQs will be set to real-time priority in the linux kernel. Requires the low latency kernel!!
  net-5:
    tsn:
      tsn-23: ["node-1:1,3","node-2:4","node-3:4", "node-4:3","node-5:3,4","node-6:1"]
      tsn-10: ["node-3:3","node-6:4"]
    flows:
      1: ':node-5:4,2:node-3:4,3:node-7:'
      2: ':node-1:3,3:node-6:1,2:node-5:3,1:node-4:3,4:node-7:'
      3: ':node-1:1,3:node-2:4,1:node-3:4,3:node-7:'
      4: ':node-6:4,1:node-2:4,1:node-3:4,3:node-7:'
      5: ':node-5:4,2:node-3:3,2:node-4:3,4:node-7:'
      # PTP Flows
      6: ':node-1:2,5:node-7:6,2:node-6:'
      7: ':node-7:7,2:node-2:'
      8: ':node-4:4,1:node-8:3,2:node-9:1,1:node-7:'
      9: ':node-5:1,1:node-10:2,4:node-8:3,2:node-9:1,1:node-7:'    
    check: true
    num_net_cores: 2 # Specify the number of cores assigned to NIC IRQs. Cores beginning with core 0 will be allocated to the IRQs. E.g. if specified to 2 means that IRQs will be allocated to cores 0 and 1
    nic_irq_rt: true # Specify if the NIC IRQs will be set to real-time priority in the linux kernel. Requires the low latency kernel!!
# ------------------------------ TSN configs -----------------------------------
# NOTES:
# - number of queue items is fixed depending on the number of hardware queues (Intel i210 = 4)
# - available priorities for the prio list go from 0 to 15
# - all priorities need to be assigned to the queues, use '*' in one queue for remaining priorities
# Use queue 0 in a taprio sched for a guard band
# ETF offload can only be set for queue 1 or 2, limitation of the intel i210 network card
# ETF queues together with taprio must be used with txtime enabled or only special (timestamped) traffic works
#
# IMPORTANT:
# ! Queue priorities MUST not overlap
# ! Map all 16 priorities to queues or use '*' in one of the queues
# ! All taprio Schedule durations MUST sum up to a factor of 1ms
#

tsnconfigs:
  tsn-10:
    name: 'Journal use-case version 1 CBS'
    taprio: {}
    queues:
      1: { mode: be, prio: [3] }
      2: { mode: be, prio: [2] }
      3: { mode: be, prio: [1] }
      4: { mode: be, prio: [0,'*'] }

  tsn-20:
    name: TAPRIO with ETF in Deadline and Deadline mode
    taprio:
      txtime: true # Usage of txtime-assist mode
      delay: 450000 # txtime delay
      sched:
        - { queue: [1], duration: 300 }
        - { queue: [2], duration: 300 }
        - { queue: [3], duration: 400 }
    queues: # Configuration of individual HW queues, delta - fudge factor of ETF
      1: { mode: etf, prio: [3], delta: 175000, deadline: yes, offload: yes } # Supports HW offloading
      2: { mode: etf, prio: [2], delta: 175000, deadline: yes, offload: yes}
      3: { mode: be, prio: [1,'*'] }

  tsn-21:
    name: TAPRIO with ETF in Deadline and Deadline mode
    taprio:
      txtime: true # Usage of txtime-assist mode
      delay: 450000 # txtime delay
      sched:
        - { queue: [1], duration: 300 }
        - { queue: [2], duration: 300 }
        - { queue: [3], duration: 400 }
    queues: # Configuration of individual HW queues, delta - fudge factor of ETF
      1: { mode: etf, prio: [3], delta: 175000, deadline: no, offload: yes } # Supports HW offloading
      2: { mode: etf, prio: [2], delta: 175000, deadline: yes, offload: yes}
      3: { mode: be, prio: [1,'*'] }

  tsn-22:
    name: TAPRIO with ETF in Deadline and Deadline mode
    taprio:
      txtime: true # Usage of txtime-assist mode
      delay: 450000 # txtime delay
      sched:
        - { queue: [1], duration: 300 }
        - { queue: [2], duration: 300 }
        - { queue: [3], duration: 400 }
    queues: # Configuration of individual HW queues, delta - fudge factor of ETF
      1: { mode: etf, prio: [3], delta: 175000, deadline: no, offload: yes } # Supports HW offloading
      2: { mode: etf, prio: [2], delta: 175000, deadline: no, offload: yes}
      3: { mode: be, prio: [1,'*'] }

  tsn-23:
    name: TAPRIO with ETF in Deadline and Deadline mode
    taprio:
      txtime: true # Usage of txtime-assist mode
      delay: 450000 # txtime delay
      sched:
        - { queue: [1], duration: 300 }
        - { queue: [2], duration: 300 }
        - { queue: [3], duration: 400 }
    queues: # Configuration of individual HW queues, delta - fudge factor of ETF
      1: { mode: etf, prio: [3], delta: 175000, deadline: yes, offload: yes } # Supports HW offloading
      2: { mode: etf, prio: [2], delta: 175000, deadline: no, offload: yes}
      3: { mode: be, prio: [1,'*'] }